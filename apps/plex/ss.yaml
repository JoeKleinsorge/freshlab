apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: plex
    app.kubernetes.io/instance: plex
    app.kubernetes.io/name: plex
    app.kubernetes.io/version: 1.16.0
  name: plex
  namespace: plex
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: plex
      app.kubernetes.io/name: plex
  serviceName: plex
  template:
    metadata:
      annotations: {}
      labels:
        app: plex
        app.kubernetes.io/instance: plex
        app.kubernetes.io/name: plex
        app.kubernetes.io/version: 1.16.0
    spec:
      affinity: {}
      containers:
        - env:
          - name: PLEX_CLAIM
            value: "claim-C4pBnwA-AHcyEXN_iVA8" 
          image: 'index.docker.io/plexinc/pms-docker:latest'
          imagePullPolicy: IfNotPresent
          name: plex-pms
          ports:
            - containerPort: 32400
              name: pms
          volumeMounts:
            - mountPath: /config
              name: pms-config
            - mountPath: /transcode
              name: pms-transcode
            - mountPath: /media
              name: pms-media
      initContainers: []
      nodeSelector: {}
      serviceAccountName: plex
      terminationGracePeriodSeconds: 120
      tolerations: []
      volumes:
        - name: pms-transcode
          emptyDir: {}
        - name: pms-media
          nfs:
            server: 192.168.1.208
            path: /volume1/Media
            readOnly: true
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: pms-config
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi


