frigate:
  strategyType: Recreate
  image:
    repository: ghcr.io/blakeblackshear/frigate
    pullPolicy: IfNotPresent
  env:
    TZ: UTC
  envFromSecrets: 
    - frigate-rstp-credentials
  extraVolumes: []
  extraVolumeMounts: []
  shmSize: 1Gi
  tmpfs:
    enabled: true
    sizeLimit: 1Gi
  config: |
    mqtt:
      host: mqtt.server.com
      port: 1883
      topic_prefix: frigate
      client_id: frigate
      user: mqtt_user
      password: password
      stats_interval: 60
    detectors:
      ov:
        type: openvino
        device: AUTO
        model:
          path: /openvino-model/ssdlite_mobilenet_v2.xml

    model:
      width: 300
      height: 300
      input_tensor: nhwc
      input_pixel_format: bgr
      labelmap_path: /openvino-model/coco_91cl_bkgr.txt
    # cameras:
    #   front_door:
    #     ffmpeg:
    #       inputs:
    #         - path: rtsp://frigated:Frigated@192.168.1.110:554/rtsp/cam/realmonitor?channel=1&subtype=2
    #           roles:
    #             - detect

    #### go2rtc config ###
    go2rtc:
      streams:
        frontnorth:
          - rtsp://user:pass@192.168.0.69:554/live0
          - "ffmpeg:frontnorth#audio=opus"
        frontnorth_sub: rtsp://frigated:Frigated@192.168.1.110:554/cam/realmonitor?channel=1&subtype=2
    ffmpeg:
      global_args: -hide_banner -loglevel warning -threads 2
      hwaccel_args: preset-vaapi
      input_args: preset-rtsp-restream
      output_args:
        detect: -threads 2 -f rawvideo -pix_fmt yuv420p
        record: preset-record-generic-audio-copy
    motion:
      threshold: 25
      improve_contrast: false
    cameras:
      frontnorth:
        enabled: true
        audio:
          enabled: true
        ui:
          order: 0
        birdseye:
          order: 0
        ffmpeg:
          inputs:
          - path: rtsp://192.168.1.110:8554/frontnorth_sub
            roles:
              - audio
              - detect
          - path: rtsp://192.168.1.110:8554/frontnorth
            roles:
              - record
        objects:
          filters:
            bird:
              min_score: 0.85
            car:
              min_area: 2000
              max_area: 24000000
              min_score: 0.85
            amazon:
              min_score: 0.75
            fedex:
              min_score: 0.75
            ups:
              min_score: 0.75
            cat:
              min_score: 0.90
              threshold: 0.7
            dog:
              min_score: 0.90
              threshold: 0.7
            deer:
              min_score: 0.85
              threshold: 0.7
            person:
              min_score: 0.90
              threshold: 0.7
        motion:
          mask:
            - 528,720,525,665,0,673,0,720
            - 1280,0,298,0,148,144
        zones:
          zone_frontyard:
            coordinates: 476,174,1280,371,1280,93,879,49,379,127,140,188,143,238
            objects:
              - person
              - dog
              - deer
          zone_front_patio:
            coordinates: 0,720,1280,720,1280,398,846,264,467,190,39,273
            objects:
              - person
              - dog
              - deer
              - cat
  probes:
    liveness:
      enabled: true
      initialDelaySeconds: 30
      failureThreshold: 5
      timeoutSeconds: 10
    readiness:
      enabled: true
      initialDelaySeconds: 30
      failureThreshold: 5
      timeoutSeconds: 10
    startup:
      enabled: false
      failureThreshold: 30
      periodSeconds: 10

  service:
    # -- Type of Service to use
    type: ClusterIP
    # -- Port the Service should communicate on
    port: 5000
    ## Specify the nodePort value for the LoadBalancer and NodePort service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:
    ## Provide any additional annotations which may be required. This can be used to
    ## set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    annotations: {}
    labels: {}

    # -- Set specific IP address for LoadBalancer. `service.type` must be set to `LoadBalancer`
    loadBalancerIP:

    # loadBalancerSourceRanges: []
    ## Set the externalTrafficPolicy in the Service to either Cluster or Local
    # externalTrafficPolicy: Cluster

    # default IP family to use for the service
    ipFamilyPolicy: SingleStack
    # ipFamilies for service
    ipFamilies: []

  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      hajimari.io/appName: frigate 
      hajimari.io/icon: video-camera
    hosts:
      - host: &host frigate.kleinsorge.dev
        paths:
          - '/'

    tls:
      - secretName: frigate-tls-certificate
        hosts:
          - *host

  persistence:
    config:
      # -- Enables persistence for the config directory
      enabled: false
      ## frigate data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      ##
      ## If you want to reuse an existing claim, you can pass the name of the PVC using
      ## the existingClaim variable
      # existingClaim: your-claim
      # subPath: some-subpath

      # -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
      accessMode: ReadWriteOnce

      # -- size/capacity of the PVC
      size: 100Mi

      # -- Do not delete the pvc upon helm uninstall
      skipuninstall: false

    media:
      # -- Enables persistence for the media directory
      enabled: false
      ## frigate data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      ##
      ## If you want to reuse an existing claim, you can pass the name of the PVC using
      ## the existingClaim variable
      # existingClaim: your-claim
      # subPath: some-subpath

      # -- [access mode](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes) to use for the PVC
      accessMode: ReadWriteOnce

      # -- size/capacity of the PVC
      size: 10Gi

      # -- Do not delete the pvc upon helm uninstall
      skipuninstall: false

   # -- Node Selector configuration
  nodeSelector: {}

  # -- Node toleration configuration
  tolerations: []

  # -- Set Pod affinity rules
  affinity: {}

